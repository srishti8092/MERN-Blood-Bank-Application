{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Srishti\\\\Desktop\\\\Projects\\\\MERN-Blood Bank App\\\\frontend\\\\src\\\\pages\\\\Dashboard\\\\Consumer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Layout from \"../../components/shared/Layout/Layout\";\nimport API from \"../../services/API\";\nimport moment from \"moment\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Consumer = () => {\n  _s();\n  const {\n    user\n  } = useSelector(state => state.auth);\n  const [data, setData] = useState([]);\n  //find donar records\n\n  useEffect(() => {\n    const getDonars = async () => {\n      try {\n        const {\n          data\n        } = await API.post(\"/inventory/get-inventory-hospital\", {\n          filters: {\n            inventoryType: \"out\",\n            hospital: user === null || user === void 0 ? void 0 : user._id\n          }\n        });\n        if (data !== null && data !== void 0 && data.success) {\n          setData(data === null || data === void 0 ? void 0 : data.inventory);\n          console.log(data);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getDonars();\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table \",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Blood Group\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Inventory Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            scope: \"col\",\n            children: \"Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data === null || data === void 0 ? void 0 : data.map(record => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: record.bloodGroup\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: record.inventoryType\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: record.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: record.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: moment(record.createdAt).format(\"DD/MM/YYYY hh:mm A\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)]\n        }, record._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Consumer, \"/6+pOghBGGciuNPSYUBuICt8mhw=\", false, function () {\n  return [useSelector];\n});\n_c = Consumer;\nexport default Consumer;\nvar _c;\n$RefreshReg$(_c, \"Consumer\");","map":{"version":3,"names":["React","useState","useEffect","Layout","API","moment","useSelector","jsxDEV","_jsxDEV","Consumer","_s","user","state","auth","data","setData","getDonars","post","filters","inventoryType","hospital","_id","success","inventory","console","log","error","children","className","scope","fileName","_jsxFileName","lineNumber","columnNumber","map","record","bloodGroup","quantity","email","createdAt","format","_c","$RefreshReg$"],"sources":["C:/Users/Srishti/Desktop/Projects/MERN-Blood Bank App/frontend/src/pages/Dashboard/Consumer.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../../components/shared/Layout/Layout\";\r\nimport API from \"../../services/API\";\r\nimport moment from \"moment\";\r\nimport { useSelector } from \"react-redux\";\r\nconst Consumer = () => {\r\n  const { user } = useSelector((state) => state.auth);\r\n  const [data, setData] = useState([]);\r\n  //find donar records\r\n\r\n  useEffect(() => {\r\n    const getDonars = async () => {\r\n      try {\r\n        const { data } = await API.post(\"/inventory/get-inventory-hospital\", {\r\n          filters: {\r\n            inventoryType: \"out\",\r\n            hospital: user?._id,\r\n          },\r\n        });\r\n\r\n        if (data?.success) {\r\n          setData(data?.inventory);\r\n          console.log(data);\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    getDonars();\r\n  }, [user]);\r\n\r\n  return (\r\n    <Layout>\r\n      <table className=\"table \">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">Blood Group</th>\r\n            <th scope=\"col\">Inventory Type</th>\r\n            <th scope=\"col\">Quantity</th>\r\n            <th scope=\"col\">Email</th>\r\n            <th scope=\"col\">Date</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data?.map((record) => (\r\n            <tr key={record._id}>\r\n              <td>{record.bloodGroup}</td>\r\n              <td>{record.inventoryType}</td>\r\n              <td>{record.quantity}</td>\r\n              <td>{record.email}</td>\r\n              <td>{moment(record.createdAt).format(\"DD/MM/YYYY hh:mm A\")}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Consumer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}